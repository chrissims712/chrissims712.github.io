<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
  <meta name="description" content="[Query features from a FeatureLayer - 4.2]">
  <!-- 
  ArcGIS API for JavaScript, https://js.arcgis.com
  For more information about the featurelayer-query sample, read the original sample description at developers.arcgis.com.
  https://developers.arcgis.com/javascript/latest/featurelayer-query/index.html  
  -->
  <title>My data Query features with my data - 4.2</title>

  <link rel="stylesheet" href="https://js.arcgis.com/4.2/esri/css/main.css">
  <script src="https://js.arcgis.com/4.2/"></script>

  <style>
    html,
    body,
    #viewDiv {
      height: 100%;
      width: 100%;
      margin: 0;
      padding: 0;
    }
    
    #infoDiv {
      background-color: white;
      color: black;
      padding: 6px;
      width: 400px;
    }
    
    #results {
      font-weight: bolder;
    }
  </style>

  <script>
    require([
        "esri/Map",
        "esri/views/MapView",
        "esri/layers/FeatureLayer",
        "esri/layers/GraphicsLayer",
        "esri/geometry/geometryEngine",
        "esri/Graphic",
        "esri/symbols/SimpleLineSymbol",
        "esri/symbols/SimpleMarkerSymbol",

        "dojo/on",
        "dojo/dom",
        "dojo/dom-construct",
        "dojo/domReady!"
      ],
        function(
        Map, MapView,
        FeatureLayer,
        GraphicsLayer,
        geometryEngine,
        Graphic,
        SimpleLineSymbol,
        SimpleMarkerSymbol,
        on, dom, domConstruct
      ) {
      
      var typeSelect = dom.byId("trail-type");
      var distSlider = dom.byId("dist-slider");
      var natForSelect = dom.byId("forest-select");
      var resultsButton = dom.byId("results-button");
      
      var trailGeometry, resultsOutput;
      
      var nationalForest = new FeatureLayer({
        url: "https://services.arcgis.com/QWISJZQTqrWSOOHJ/arcgis/rest/services/National_Forests/FeatureServer/0",
        outFields: ["*"],
        visible: false
      });
      
      var motoTrails = new FeatureLayer({
        url: "https://services.arcgis.com/QWISJZQTqrWSOOHJ/arcgis/rest/services/TrailsFullMotorizedSPECIAL/FeatureServer/0",
        outFields: ["*"],
        visible: false
      });
      
      var resultsLayer = new GraphicsLayer();
      
      var map = new Map({
        basemap: "topo",
        layers: [nationalForest, motoTrails, resultsLayer]
      });
      
      var view = new MapView({
        container: "viewDiv",
          map: map,
          center: [-97.75188, 37.23308],
          zoom: 3
        });
      view.ui.add("infoDiv","top-right");
      
      
      //query trail types
      view.then(function() {
        return motoTrails.then(function() {
          var query = new motoTrails.CreateQuery();
          return motoTrails.queryFeatures(query);
        });
      })
      .then(getValues)
      .then(addToSelect)
      .then(createGraphics);
      
      //returns results of query motoType attribute
      function getValues(response) {
        var features = response.features;
        var values = features.map(function(feature){
          return feature.attributes.motoType;
        });
        return values;
      }
      
      //add values to moto type select element
      function addToSelect(values) {
        values.sort();
        values.forEach(function(value){
          var option = domConstruct.create("option");
          option.text = value;
          typeSelect.add(option);
        });
        return setTypeDefinitionExpression(typeSelect.value);
      }
      
      //set the typeSelect Definition on moto type layer to reflect 
      //selection by user
      function setTypeDefinitionExpression(newValue) {
        motoTrails.definitionExpression = "Trail usage is '" + newValue + "'.";
        
        if (!motoTrails.visible) {
          motoTrails.visible = true;
        }
        return queryForTrailGeometry();
      }
      
      
      //Get geometries for motoTrails layer
      function queryForTrailGeometry() {
        var trailQuery = motoTrails.CreateQuery();
        
        return motoTrails.queryFeatures(trailQuery)
        .then(function(response) {
          trailGeometry = response.features.map(function(feature)
            {
            return feature.geometry;
          });
          return trailGeometry;
        });
      }
      
      
      
      //Function to add graphics (not complete)
      function createBuffer(wellpoints) {
      //add lines to view as a graphic
      //WHEN FINISHED WORK TO ADD POPUP TO THIS
      var trailLines = new Graphic({
        geometry: trailGeometry,
        symbol: new SimpleLineSymbol({
          width: 1,
          color: "dodgerblue",
          style: "solid"
        })
      });
        view.graphics.removeAll();
        view.graphics.add(trailLines);
      }
      //End of unfinished script
      
      //Beginning of button forming
      
      //Get trail distance from user
      on(distSlider, "input", function() {
        distance = distSlider.value;
        dom.byId("dist-slider").innerText = distance;
      });
      
      //Get trail usage from user
      on(typeSelect, "change", function(evt){
        var type = evt.target.value;
        setTypeDefinitionExpression(type)
        .then(createBuffer);
      });
      //CHANGE CREATEBUFFER ABOVE ^^^^
      
      //Set query trails button
      on(resultsButton, "click", function(){
        queryAll()
        .then(displayResults);
      });
      //STILL NEEDS A FUNCTION TO ACCOMPANY IT!!!
      
      //ALSO NEEDS DISPLAY RESULTS FUNCTION!!!
      
      
      
      

      
      
      
      
      
      
      
      
      
    });
    
  </script>
  
  </head>
  
  <body>
    <div id="viewDiv"></div>
    <div id="infoDiv">
      Select trail usage: <select id="typeSelect"></select><br> Trail distance range: <input id="dist-slider" type="range" min="0.1" max="50" step="0.1" value="5">&nbsp;
      <span id="distance-value">5</span> miles<br> National forest: <select id="forest-select"></select>
      <button id="results-button">Search Trails</button><br>
      <div id="results"></div>
    </div>
  </body>
</html>
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
